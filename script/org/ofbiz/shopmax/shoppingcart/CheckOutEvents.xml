<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
    <simple-method method-name="checkLogin" short-description="Check user login" login-required="false">
        <session-to-field field="userLogin"/>
        <if-not-empty field="userLogin">
            <return response-code="success"/>
            <else>
                <return response-code="empty"/>
            </else>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="createAccount" short-description="Create account to cart" login-required="false">
        <entity-one value-field="sysUserLogin" entity-name="UserLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <call-class-method method-name="getCartObject" class-name="org.ofbiz.order.shoppingcart.ShoppingCartEvents" ret-field="shoppingCart">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
        </call-class-method>
        <call-object-method method-name="getProductStoreId" obj-field="shoppingCart" ret-field="productStoreId"/>
        <script>groovy:
            context.currentPassword = org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(8);
        </script>
        
        <!-- Create customer -->
        <set field="createShopmaxCustomerInMap.USER_FIRST_NAME" from-field="parameters.USER_FIRST_NAME"/>
        <set field="createShopmaxCustomerInMap.USER_LAST_NAME" from-field="parameters.USER_LAST_NAME"/>
        <set field="createShopmaxCustomerInMap.CUSTOMER_EMAIL" from-field="parameters.CUSTOMER_EMAIL"/>
        <set field="createShopmaxCustomerInMap.PASSWORD" from-field="currentPassword"/>
        <set field="createShopmaxCustomerInMap.CONFIRM_PASSWORD" from-field="currentPassword"/>
        <set field="createShopmaxCustomerInMap.businessUser" value="N"/>
        <set field="createShopmaxCustomerInMap.productStoreId" from-field="productStoreId"/>
        <call-service service-name="createShopmaxCustomer" in-map-name="createShopmaxCustomerInMap">
            <result-to-field result-name="USERNAME" field="userLoginId"/>
        </call-service>
        
        <entity-one value-field="createdUserLogin" entity-name="UserLogin">
            <field-map field-name="userLoginId"/>
        </entity-one>
        <set field="partyId" from-field="createdUserLogin.partyId"/>
        <property-to-field resource="general" property="country.geo.id.default" field="defaultCountryGeoId"/>
        <set field="parameters.shipToCountryGeoId" from-field="defaultCountryGeoId"/>
        <set field="parameters.billToCountryGeoId" from-field="defaultCountryGeoId"/>
        <set field="parameters.billToStateProvinceGeoId" value="_NA_"/>
        
        <!-- Create shipping address -->
        <set field="parameters.shipToName" from-field="parameters.USER_FIRST_NAME"/>
        <set field="parameters.shipToAttnName" from-field="parameters.USER_FIRST_NAME"/>
        <call-map-processor xml-resource="component://order/script/org/ofbiz/order/customer/CheckoutMapProcs.xml"
            processor-name="shipToAddress" in-map-name="parameters" out-map-name="shipToAddressCtx"/>
        <set field="shipToAddressCtx.partyId" from-field="partyId"/>
        <set field="shipToAddressCtx.userLogin" from-field="createdUserLogin"/>
        <set field="shipToAddressCtx.setShippingPurpose" value="Y"/>
        <set field="shipToAddressCtx.productStoreId" from-field="productStoreId"/>
        <if-compare field="parameters.useShippingAddressForBilling" operator="equals" value="Y">
            <set field="shipToAddressCtx.setBillingPurpose" value="Y"/>
        </if-compare>
        <call-service service-name="createPostalAddressAndPurposes" in-map-name="shipToAddressCtx">
            <result-to-field result-name="contactMechId" field="shipToContactMechId"/>
        </call-service>
        <log level="info" message="Shipping address created with contactMechId ${shipToContactMechId}"/>
        
        <!-- Create billing address -->
        <if-compare field="parameters.useShippingAddressForBilling" operator="not-equals" value="Y">
            <call-map-processor xml-resource="component://order/script/org/ofbiz/order/customer/CheckoutMapProcs.xml"
                    processor-name="billToAddress" in-map-name="parameters" out-map-name="billToAddressCtx"/>
            <set field="billToAddressCtx.partyId" from-field="partyId"/>
            <set field="billToAddressCtx.userLogin" from-field="createdUserLogin"/>
            <set field="billToAddressCtx.setBillingPurpose" value="Y"/>
            <set field="billToAddressCtx.productStoreId" from-field="productStoreId"/>
            <call-service service-name="createPostalAddressAndPurposes" in-map-name="billToAddressCtx">
                <result-to-field result-name="contactMechId" field="billToContactMechId"/>
            </call-service>
            <log level="info" message="Billing address created with contactMechId ${billToContactMechId}"/>
            <else>
                <log level="info" message="Billing address created same as Shipping address with contactMechId ${shipToContactMechId}"/>
            </else>
        </if-compare>
        
        <!-- login by created customer -->
        <script>groovy:
            org.ofbiz.webapp.control.LoginWorker.doBasicLogin(createdUserLogin, request);
            org.ofbiz.webapp.control.LoginWorker.autoLoginSet(request, response);
            session = request.getSession();
            cart = session.getAttribute("shoppingCart");
            if (cart != null) {
                cart.setOrderPartyId(createdUserLogin.partyId);
            }
        </script>
    </simple-method>
    <simple-method method-name="createUpdateBillingAndPayment" short-description="Create update billing and payment" login-required="false">
        <session-to-field session-name="userLogin"/>
        <set field="parameters.partyId" from-field="userLogin.partyId"/>
        <property-to-field resource="general" property="country.geo.id.default" field="defaultCountryGeoId"/>
        <set field="parameters.billToCountryGeoId" from-field="defaultCountryGeoId"/>
        <if-empty field="parameters.billToContactMechId">
            <set field="parameters.billToStateProvinceGeoId" value="_NA_"/>
            <set field="parameters.firstNameOnCard" from-field="parameters.billToName"/>
            <set field="parameters.lastNameOnCard" from-field="parameters.billToLastName"/>
            <else>
                <!-- set person -->
                <set field="getPersonInMap.partyId" from-field="parameters.partyId"/>
                <call-service service-name="getPerson" in-map-name="getPersonInMap">
                   <result-to-field result-name="lookupPerson"/>
                </call-service>
                <set field="parameters.firstNameOnCard" from-field="lookupPerson.firstName"/>
                <set field="parameters.lastNameOnCard" from-field="lookupPerson.lastName"/>
                
                <!-- set credit card -->
                <entity-one value-field="creditCard" entity-name="CreditCard">
                    <field-map field-name="paymentMethodId" from-field="parameters.paymentMethodId"/>
                </entity-one>
                <set field="parameters.cardNumber" from-field="creditCard.cardNumber"/>
                <set field="parameters.cardType" from-field="creditCard.cardType"/>
                <set field="parameters.expMonth" value="${groovy:(creditCard.expireDate).substring(0, 2)}"/>
                <set field="parameters.expYear" value="${groovy:(creditCard.expireDate).substring(3)}"/>
            </else>
        </if-empty>
        <call-class-method method-name="getCartObject" class-name="org.ofbiz.order.shoppingcart.ShoppingCartEvents" ret-field="parameters.shoppingCart">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
        </call-class-method>
        <set-service-fields service-name="createUpdateBillingAddressAndPaymentMethod" to-map="createUpdateBillingAddressAndPaymentMethodInMap" map="parameters"/>
        <set field="createUpdateBillingAddressAndPaymentMethodInMap.cardType" from="parameters.cardType"/>
        <call-service service-name="createUpdateBillingAddressAndPaymentMethod" in-map-name="createUpdateBillingAddressAndPaymentMethodInMap"/>
    </simple-method>
    <simple-method method-name="createUpdateShippingAddress" short-description="Create update shipping address" login-required="false">
        <call-class-method method-name="getCartObject" class-name="org.ofbiz.order.shoppingcart.ShoppingCartEvents" ret-field="shoppingCart">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
        </call-class-method>
        <call-object-method method-name="getProductStoreId" obj-field="shoppingCart" ret-field="productStoreId"/>
        <set field="parameters.productStoreId" from-field="productStoreId"/>
        
        <!-- split shipment -->
        <set field="getSupplierCarrierShippingMethodTypeMapInMap.request" from-field="request"/>
        <call-service service-name="getSupplierCarrierShippingMethodTypeMap" in-map-name="getSupplierCarrierShippingMethodTypeMapInMap">
            <result-to-field result-name="supplierPartyIds"/>
            <result-to-field result-name="supplierCarrierMap"/>
            <result-to-field result-name="supplierShipmentMethodTypeMap"/>
        </call-service>
        
        <set field="getSupplierShoppingCartItemsMapInMap.shoppingCart" from-field="shoppingCart"/>
        <call-service service-name="getSupplierShoppingCartItemsMap" in-map-name="getSupplierShoppingCartItemsMapInMap">
            <result-to-field result-name="supplierShoppingCartItemsMap"/>
        </call-service>
        
        <iterate entry="supplierPartyId" list="supplierPartyIds">
            <set field="carrierPartyId" from-field="supplierCarrierMap[supplierPartyId]"/>
            <set field="shipmentMethodTypeId" from-field="supplierShipmentMethodTypeMap[supplierPartyId]"/>
            
            <set field="shoppingCartItems" from-field="supplierShoppingCartItemsMap[supplierPartyId]"/>
            <iterate entry="shoppingCartItem" list="shoppingCartItems">
                <call-object-method method-name="getItemIndex" obj-field="shoppingCart" ret-field="shoppingCartItemIndex">
                    <field field="shoppingCartItem" type="org.ofbiz.order.shoppingcart.ShoppingCartItem"/>
                </call-object-method>
                <call-object-method method-name="getShipGroups" obj-field="shoppingCart" ret-field="itemShipGroups">
                    <field field="shoppingCartItem" type="org.ofbiz.order.shoppingcart.ShoppingCartItem"/>
                </call-object-method>
                
                <!-- set carrier and shipment method -->
                <script>groovy:
                    shoppingCart.setCarrierPartyId(shoppingCartItemIndex, carrierPartyId);
                    shoppingCart.setShipmentMethodTypeId(shoppingCartItemIndex, shipmentMethodTypeId);
                </script>
                
                <!-- assign item ship group -->
                <iterate-map key="index" value="quantity" map="itemShipGroups">
                    <set field="groupIndex" from-field="index"/>
                    <set field="groupQuantity" from-field="quantity"/>
                </iterate-map>
                <set field="assignItemShipGroupInMap.shoppingCart" from-field="shoppingCart"/>
                <set field="assignItemShipGroupInMap.itemIndex" from-field="shoppingCartItemIndex" type="Integer"/>
                <set field="assignItemShipGroupInMap.fromGroupIndex" from-field="groupIndex" type="Integer"/>
                <set field="assignItemShipGroupInMap.toGroupIndex" value="-1" type="Integer"/>
                <set field="assignItemShipGroupInMap.quantity" from-field="groupQuantity" type="BigDecimal"/>
                <call-service service-name="assignItemShipGroup" in-map-name="assignItemShipGroupInMap"/>
            </iterate>
        </iterate>
        
        <session-to-field session-name="userLogin"/>
        <set field="parameters.partyId" from-field="userLogin.partyId"/>
        <set field="parameters.setDefaultShipping" value="Y"/>
        
        <if-empty field="parameters.shipToContactMechId">
            <property-to-field resource="general" property="country.geo.id.default" field="defaultCountryGeoId"/>
            <set field="parameters.shipToCountryGeoId" from-field="defaultCountryGeoId"/>
            <set field="parameters.shipToStateProvinceGeoId" value="_NA_"/>
            <set field="parameters.shipToName" from-field="parameters.USER_FIRST_NAME"/>
            <set field="parameters.partyId" from-field="userLogin.partyId"/>
            <set field="parameters.firstName" from-field="parameters.USER_FIRST_NAME"/>
            <set field="parameters.lastName" from-field="parameters.USER_LAST_NAME"/>
            <set field="parameters.emailAddress" from-field="parameters.CUSTOMER_EMAIL"/>
            <else>
                <!-- set person -->
                <set field="getPersonInMap.partyId" from-field="parameters.partyId"/>
                <call-service service-name="getPerson" in-map-name="getPersonInMap">
                   <result-to-field result-name="lookupPerson"/>
                </call-service>
                <set field="parameters.firstName" from-field="lookupPerson.firstName"/>
                <set field="parameters.lastName" from-field="lookupPerson.lastName"/>
               
               <!-- set postal address -->
               <entity-one value-field="postalAddress" entity-name="PostalAddress">
                   <field-map field-name="contactMechId" from-field="parameters.shipToContactMechId"/>
               </entity-one>
                <set field="parameters.shipToName" from-field="postalAddress.toName"/>
                <set field="parameters.shipToAddress1" from-field="postalAddress.address1"/>
                <set field="parameters.shipToCity" from-field="postalAddress.city"/>
                <set field="parameters.shipToStateProvinceGeoId" from-field="postalAddress.stateProvinceGeoId"/>
                <set field="parameters.shipToCountryGeoId" from-field="postalAddress.countryGeoId"/>
                <set field="parameters.shipToPostalCode" from-field="postalAddress.postalCode"/>
                
                <!-- set email address -->
                <set field="getPartyEmailInMap.partyId" from-field="parameters.partyId"/>
                <call-service service-name="getPartyEmail" in-map-name="getPartyEmailInMap">
                   <result-to-field result-name="emailAddress"/>
                </call-service>
                <set field="parameters.emailAddress" from-field="emailAddress"/>
                
                <!-- set telephone number -->
                <set field="getPartyTelephoneInMap.partyId" from-field="parameters.partyId"/>
                <call-service service-name="getPartyTelephone" in-map-name="getPartyTelephoneInMap">
                   <result-to-field result-name="countryCode" field="parameters.shipToCountryCode"/>
                   <result-to-field result-name="areaCode" field="parameters.shipToAreaCode"/>
                   <result-to-field result-name="contactNumber" field="parameters.shipToContactNumber"/>
                </call-service>
            </else>
        </if-empty>
        
        <call-class-method method-name="getCartObject" class-name="org.ofbiz.order.shoppingcart.ShoppingCartEvents" ret-field="shoppingCart">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
        </call-class-method>
        <call-object-method method-name="setUserLogin" obj-field="shoppingCart">
            <field field="userLogin" type="org.ofbiz.entity.GenericValue"/>
            <field field="dispatcher" type="org.ofbiz.service.LocalDispatcher"/>
        </call-object-method>
        <set field="parameters.shoppingCart" from-field="shoppingCart"/>
        <set-service-fields service-name="createUpdateCustomerAndShippingAddress" to-map="createUpdateCustomerAndShippingAddressInMap" map="parameters"/>
        <call-service service-name="createUpdateCustomerAndShippingAddress" in-map-name="createUpdateCustomerAndShippingAddressInMap"/>
    </simple-method>
</simple-methods>
