<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
    
    <simple-method method-name="sellerDoBasicLogin" short-description="Seller Do Basic Login" login-required="false">
        <request-to-field field="partyId" request-name="parameters.partyId"/>
        <if-not-empty field="parameters.partyId">
            <entity-and list="userLoginPartyList" entity-name="UserLoginAndPartyDetails">
                <field-map field-name="partyId" from-field="parameters.partyId"/>
            </entity-and>
            <first-from-list entry="userLoginPartyMap" list="userLoginPartyList"/>
            <entity-one value-field="userLoginCtx" entity-name="UserLogin">
                <field-map field-name="userLoginId" from-field="userLoginPartyMap.userLoginId"/>
            </entity-one>
            <!-- now finished, log in the user and set the cart's partyId to that of the newly created customer ... -->
            <call-bsh><![CDATA[
                org.ofbiz.webapp.control.LoginWorker.doBasicLogin(userLoginCtx, request);
                org.ofbiz.webapp.control.LoginWorker.autoLoginSet(request, response);
                session = request.getSession();
                cart = session.getAttribute("shoppingCart");
                if (cart != null) {
                    cart.setOrderPartyId(userLoginCtx.get("partyId"));
                }
            ]]></call-bsh>
            <!-- tell the control servlet that we just logged in the user... -->
            <set value="TRUE" field="_LOGIN_PASSED_"/>
            <field-to-request field="_LOGIN_PASSED_"/>
            <else>
                <add-error><fail-message message="The partyId is empty."/></add-error>
                <check-errors/>
            </else>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="createBuyerToSeller" short-description="Create Buyer To Seller">
        <entity-one value-field="systemUserLogin" entity-name="UserLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        
        <set field="parameters.partyId" from-field="userLogin.partyId"/>
        
        <entity-one value-field="party" entity-name="Party">
            <field-map field-name="partyId" from-field="parameters.partyId"/>
        </entity-one>
        
        <entity-one value-field="person" entity-name="Person">
            <field-map field-name="partyId" from-field="parameters.partyId"/>
        </entity-one>
        
        <entity-and list="userLoginBuyers" entity-name="UserLogin">
            <field-map field-name="partyId" from-field="parameters.partyId"/>
        </entity-and>
        <first-from-list entry="userLoginBuyer" list="userLoginBuyers"/>
        
        <if-not-empty field="supplierList">
            <iterate entry="supplier" list="supplierList">
                <set field="tenantId" from-field="supplier.partyId"/>
                <script>groovy:
                    import org.ofbiz.entity.DelegatorFactory;
                    def tenantDelegator = DelegatorFactory.getDelegator(delegator.getDelegatorBaseName() + "#" + tenantId);
                    def tenantBuyerParty = tenantDelegator.findOne("Party", ["partyId" : partyId], false);
                </script>
                
                <if-empty field="tenantBuyerParty">
                    <script>groovy:
                        import org.ofbiz.entity.DelegatorFactory;
                        def tenantDelegator = DelegatorFactory.getDelegator(delegator.getDelegatorBaseName() + "#" + tenantId);
                        def tenantParty = tenantDelegator.makeValue("Party");
                        tenantParty = party;
                        tenantDelegator.create(tenantParty);
                        
                        def tenantPerson = tenantDelegator.makeValue("Person");
                        tenantPerson = person;
                        tenantDelegator.create(tenantPerson);
                        
                        def tenantUserLogin = tenantDelegator.makeValue("UserLogin");
                        tenantUserLogin = userLoginBuyer;
                        tenantDelegator.create(tenantUserLogin);
                    </script>
                    
                    <set field="createCustomerRoleCtx.userLogin" from-field="systemUserLogin"/>
                    <set field="createCustomerRoleCtx.partyId" from-field="parameters.partyId"/>
                    <set field="createCustomerRoleCtx.roleTypeId" value="CUSTOMER"/>
                    <set field="runTenantServiceInMap.tenantId" from-field="tenantId"/>
                    <set field="runTenantServiceInMap.serviceName" value="createPartyRole"/>
                    <set field="runTenantServiceInMap.serviceParameters" from-field="createCustomerRoleCtx"/>
                    <call-service service-name="runTenantService" in-map-name="runTenantServiceInMap"/>
                    
                    <set field="createBuyerRoleCtx.userLogin" from-field="systemUserLogin"/>
                    <set field="createBuyerRoleCtx.partyId" from-field="parameters.partyId"/>
                    <set field="createBuyerRoleCtx.roleTypeId" value="BUYER"/>
                    <set field="runTenantServiceInMap.tenantId" from-field="tenantId"/>
                    <set field="runTenantServiceInMap.serviceName" value="createPartyRole"/>
                    <set field="runTenantServiceInMap.serviceParameters" from-field="createBuyerRoleCtx"/>
                    <call-service service-name="runTenantService" in-map-name="runTenantServiceInMap"/>
                    
                    <!-- Create email address -->
                    <entity-and list="emailAddressList" entity-name="PartyContactDetailByPurpose" filter-by-date="true">
                        <field-map field-name="partyId" from-field="parameters.partyId"/>
                        <field-map field-name="contactMechPurposeTypeId" value="PRIMARY_EMAIL"/>
                    </entity-and>
                    <if-not-empty field="emailAddressList">
                        <first-from-list entry="emailAddress" list="emailAddressList"/>
                        <entity-one value-field="emailAddressContactMech" entity-name="ContactMech">
                            <field-map field-name="contactMechId" from-field="emailAddress.contactMechId"/>
                        </entity-one>
                        <entity-and list="emailAddressPartyContactMechs" entity-name="PartyContactMech">
                            <field-map field-name="partyId" from-field="parameters.partyId"/>
                            <field-map field-name="contactMechId" from-field="emailAddress.contactMechId"/>
                        </entity-and>
                        <first-from-list entry="emailAddressPartyContactMech" list="emailAddressPartyContactMechs"/>
                        <script>groovy:
                            import org.ofbiz.entity.DelegatorFactory;
                            def tenantDelegator = DelegatorFactory.getDelegator(delegator.getDelegatorBaseName() + "#" + tenantId);
                            def tenantContactMech = tenantDelegator.makeValue("ContactMech");
                            tenantContactMech = emailAddressContactMech;
                            tenantDelegator.create(tenantContactMech);
                            
                            def tenantPartyContactMech = tenantDelegator.makeValue("PartyContactMech");
                            tenantPartyContactMech = emailAddressPartyContactMech;
                            tenantDelegator.create(tenantPartyContactMech);
                        </script>
                        
                        <set field="emailPurposeContext.userLogin" from-field="systemUserLogin"/>
                        <set field="emailPurposeContext.partyId" from-field="parameters.partyId"/>
                        <set field="emailPurposeContext.contactMechId" from-field="emailAddress.contactMechId"/>
                        <set field="emailPurposeContext.contactMechPurposeTypeId" value="PRIMARY_EMAIL"/>
                        <set field="runTenantServiceInMap.tenantId" from-field="tenantId"/>
                        <set field="runTenantServiceInMap.serviceName" value="createPartyContactMechPurpose"/>
                        <set field="runTenantServiceInMap.serviceParameters" from-field="emailPurposeContext"/>
                        <call-service service-name="runTenantService" in-map-name="runTenantServiceInMap"/>
                    </if-not-empty>
                </if-empty>
            </iterate>
        </if-not-empty>
    </simple-method>
</simple-methods>
